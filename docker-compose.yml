services:
  # freshrss-application:
  #   container_name: freshrss-application
  #   image: webgrip/freshrss-application:latest
  #   pull_policy: never
  #   build:
  #     context: .
  #     dockerfile: ops/docker/application/Dockerfile
  #     target: development
  #   restart: always
  #   depends_on:
  #     postgres:
  #       condition: service_started
  #   ports:
  #     - "127.0.0.1:5678:5678"
  #   environment:
  #     - SUBDOMAIN=${SUBDOMAIN:-freshrss-application}
  #     - DOMAIN_NAME=${DOMAIN_NAME:-webgrip.test}
  #   labels:
  #     - "traefik.enable=true"

  #     # -------------------------------
  #     # 1) Router for HTTP (port 80)
  #     # -------------------------------
  #     - "traefik.http.routers.freshrss-application.entrypoints=web"
  #     - "traefik.http.routers.freshrss-application.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)"
  #     # This middleware redirects to HTTPS
  #     - "traefik.http.routers.freshrss-application.middlewares=redirect-to-https"

  #     # Define the middleware that redirects HTTP -> HTTPS
  #     - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  #     # --------------------------------
  #     # 2) Router for HTTPS (port 443)
  #     # --------------------------------
  #     - "traefik.http.routers.freshrss-application-secure.entrypoints=websecure"
  #     - "traefik.http.routers.freshrss-application-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)"
  #     - "traefik.http.routers.freshrss-application-secure.tls=true"

  #     # Configure certs (the main domain + wildcard SAN)
  #     - "traefik.http.routers.freshrss-application-secure.tls.domains[0].main=${SUBDOMAIN}.${DOMAIN_NAME}"
  #     - "traefik.http.routers.freshrss-application-secure.tls.domains[0].sans=*.${DOMAIN_NAME}"

  #     # Attach this router to the 'freshrss-application' service
  #     - "traefik.http.routers.freshrss-application-secure.service=freshrss-application@docker"

  #     # --------------------------------
  #     # 3) Service definition for freshrss-application
  #     # --------------------------------
  #     - "traefik.http.services.freshrss-application.loadbalancer.server.scheme=http"
  #     - "traefik.http.services.freshrss-application.loadbalancer.server.port=5678"

  #   env_file:
  #     - .env
  #   volumes:
  #     - freshrss-application-data:/data

  # freshrss-application-mkcert:
  #   container_name: freshrss-application-mkcert
  #   image: webgrip/traefik-local-development-mkcert:latest
  #   pull_policy: always
  #   volumes:
  #     - ~/.config/mkcert:/root/.local/share/mkcert:ro
  #     - certificate-data:/certificate-data:rw
  #   entrypoint: [ "/app/entrypoint.sh", "${DOMAIN_NAME}", "${SUBDOMAIN}.${DOMAIN_NAME}" ]

  freshrss-application.freshrss:
    container_name: freshrss-application
    image: webgrip/freshrss-application:latest
    pull_policy: never
    build:
      context: .
      dockerfile: ops/docker/application/Dockerfile
    restart: unless-stopped
    depends_on:
      freshrss-application.postgres:
        condition: service_healthy
    logging:
      options:
        max-size: 10m
    volumes:
      - freshrss-application-freshrss-application-data:/var/www/FreshRSS/data
      - freshrss-application-freshrss-application-extensions:/var/www/FreshRSS/extensions
    ports:
      - "127.0.0.1:8080:80"
    environment:
      TZ: Europe/Amsterdam
      CRON_MIN: '2,32'
      FRESHRSS_ENV: development
      LISTEN: 0.0.0.0:80
      # Optional parameter, remove for automatic settings, set to 0 to disable,
      # or (if you use a proxy) to a space-separated list of trusted IP ranges
      # compatible with https://httpd.apache.org/docs/current/mod/mod_remoteip.html#remoteipinternalproxy
      # This impacts which IP address is logged (X-Forwarded-For or REMOTE_ADDR).
      # This also impacts external authentication methods;
      # see https://freshrss.github.io/FreshRSS/en/admins/09_AccessControl.html
      # TRUSTED_PROXY: 172.16.0.1/12 192.168.0.1/16
      # Optional parameter, set to 1 to enable OpenID Connect (only available in our Debian image)
      # Requires more environment variables. See https://freshrss.github.io/FreshRSS/en/admins/16_OpenID-Connect.html
      OIDC_ENABLED: 0
      # Optional auto-install parameters (the Web interface install is recommended instead):
      # ⚠️ Parameters below are only used at the very first run (so far).
      # So if changes are made (or in .env file), first delete the service and volumes.
      # ℹ️ All the --db-* parameters can be omitted if using built-in SQLite database.
      # FRESHRSS_INSTALL: |-
      #   --api-enabled
      #   --base-url ${BASE_URL}
      #   --db-base ${DB_BASE}
      #   --db-host ${DB_HOST}
      #   --db-password ${DB_PASSWORD}
      #   --db-type pgsql
      #   --db-user ${DB_USER}
      #   --default-user admin
      #   --language en
      # FRESHRSS_USER: |-
      #   --api-password ${ADMIN_API_PASSWORD}
      #   --email ${ADMIN_EMAIL}
      #   --language en
      #   --password ${ADMIN_PASSWORD}
      #   --user admins

  freshrss-application.postgres:
    container_name: freshrss-application-postgres
    image: webgrip/freshrss-application-postgres:latest
    pull_policy: never
    build:
      context: .
      dockerfile: ops/docker/postgres/Dockerfile
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"
    logging:
      options:
        max-size: 10m
    environment:
      POSTGRES_DB: ${DB_BASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - freshrss-application-freshrss-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_BASE}"]
      interval: 5s
      timeout: 3s
      retries: 20

volumes:
  freshrss-application-freshrss-application-data:
  freshrss-application-freshrss-application-extensions:

  freshrss-application-freshrss-postgres-data:

  certificate-data:
    external: true

networks:
  default:
    external: true
    name: webgrip

